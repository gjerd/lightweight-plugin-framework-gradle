plugins {
    id 'java'
}

group = 'org.javacentric.yay'
version = '0.0.1'
project.ext.name = 'yay-plugin'

repositories {
    mavenLocal()
    mavenCentral()
}

//String appDestinationDirectory =  System.getProperty("user.home") + File.separator +
//                                    File.separator + "spades" + File.separator +
//                                    File.separator + "plugins"

//String appDestinationDirectory = System.getProperty("user.home") + File.separator +
//        File.separator + "spades" + File.separator +
//        getProject().getParent().getName() +
//        File.separator + "plugins" + File.separator + project.ext.name

//def appDestinationDirectory = System.getProperty("user.home") + File.separator +
//        getProject().getParent().getName() +
//        File.separator + "plugins" + File.separator + project.ext.name

String appDestinationDirectory = System.getProperty("user.home") + File.separator +
        "spades" + File.separator +
        getProject().getParent().getName() + File.separator +
        "plugins" + File.separator + project.ext.name

def appDestinationLibDirectory = appDestinationDirectory + File.separator + "lib"

dependencies {
    implementation 'org.javacentric.gjerd:lightweight-plugin-framework:0.0.8-SNAPSHOT'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}


test {
    useJUnitPlatform()
}

task copyJarsToDestinationDirectory {
    println appDestinationDirectory
    println appDestinationLibDirectory

    doLast {
        // Copy app's jar
        copy {
            from "${buildDir}/libs/${jar.archiveFileName.get()}"
            into(appDestinationLibDirectory)
        }

        // Copy dependencies
        copy {
            from(configurations.compileClasspath)
            into(appDestinationLibDirectory)
        }

        copy {
            from "${buildDir}/resources/main"
            into(appDestinationDirectory)
        }

    }

}

task removeDestinationDirectory {
    doLast {
        delete appDestinationDirectory
    }
}

build.dependsOn copyJarsToDestinationDirectory
clean.dependsOn removeDestinationDirectory